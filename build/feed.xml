<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>maocypher.dev</title>
    <description>My personal webpage</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 26 Jan 2025 11:25:17 +0100</pubDate>
    <lastBuildDate>Sun, 26 Jan 2025 11:25:17 +0100</lastBuildDate>
    <generator>Jekyll v4.3.4</generator>

    
      <item>
        <title>Updating Nextcloud on Proxmox LXC with Alpine Linux</title>
        <description>&lt;h2 id=&quot;installing-nextcloud-on-proxmox&quot;&gt;Installing Nextcloud on Proxmox&lt;/h2&gt;

&lt;p&gt;For installing Nextcloud on my Proxmox VE as LXC with Alpine Linux I used the &lt;a href=&quot;https://github.com/tteck/Proxmox&quot;&gt;Proxmox helper scripts from tteck&lt;/a&gt; (now continued in the &lt;a href=&quot;https://community-scripts.github.io/ProxmoxVE/&quot;&gt;community scripts&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;I followed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;How-to-install&lt;/code&gt; for Alpine-Linux with the &lt;a href=&quot;https://community-scripts.github.io/ProxmoxVE/scripts?id=nextcloudpi&quot;&gt;community script&lt;/a&gt; and was happy until I did my first try updating Nextcloud to the next major version.&lt;/p&gt;

&lt;h2 id=&quot;upgrading-nextcloud&quot;&gt;Upgrading Nextcloud&lt;/h2&gt;

&lt;p&gt;First I tried to follow the manual from &lt;a href=&quot;https://docs.nextcloud.com/server/latest/admin_manual/maintenance/upgrade.html&quot;&gt;Nextcloud&lt;/a&gt; to upgrade to the next major version, but it failed completely and I wasn’t able to get it running again. So I reverted my changes and installed my backup.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt;
Make sure you have a valid backup before starting with the upgrade&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Identify the version of your nextcloud hub. You can find this on the Admin UI &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Administrator Settings -&amp;gt; Overview -&amp;gt; Version&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Set nextcloud into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Maintenance mode&lt;/code&gt; by calling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;occ maintenance:mode --on&lt;/code&gt;. Unlike on other installation of nextcloud on alpine it wasn’t necessary for me to call it like this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo -u www-data php occ maintenance:mode --on&lt;/code&gt;. On the one hand &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt; isn’t installed and on the other hand the users are either &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nextcloud&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nginx&lt;/code&gt; depending on the installed nextcloud version.&lt;/li&gt;
  &lt;li&gt;With &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apk list | grep nextcloud | grep installed&lt;/code&gt; you can list all nextcloud packages that are installed&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# enable maintenance mode&lt;/span&gt;
occ maintenance:mode &lt;span class=&quot;nt&quot;&gt;--on&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# list current installed packages (here you can already see possible dependency packages that must also be updated)&lt;/span&gt;
apk list | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;nextcloud | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;installed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Hint&lt;/strong&gt;
In my case I only had nextcloud packages (without the version in the package name) which was nextcloud hub 27&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;
On &lt;a href=&quot;https://pkgs.alpinelinux.org/packages?name=nextcloud*&amp;amp;branch=edge&amp;amp;repo=&amp;amp;arch=x86_64&amp;amp;origin=&amp;amp;flagged=&amp;amp;maintainer=&quot;&gt;alpine packages&lt;/a&gt; you can find current available nextcloud packages&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Install the next major version of nextcloud hub e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apk add nextcloud28&lt;/code&gt; if this runs into issues because &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nextcloud&lt;/code&gt; is blocking files you can try running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apk add nextcloud28 --force-overwrite&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;occ upgrade&lt;/code&gt; to start the upgrade process. During this step it might happen that occ cannot finish the update, because apps are not compatible the new version. In that case I disabled all apps by using this command e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;occ app:disable files_sharing&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;All the packages you disabled are probably available as alpine package and should be installed manually e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apk add nextcloud29-files_sharing&lt;/code&gt;. Also here when nextcloud was blocking I installed it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apk add nextcloud29-files_sharing --force-overwrite&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;When you updated all dependencies try running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;occ upgrade&lt;/code&gt; it should be successful now.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# install nextcloud hub; optional use --force-overwrite&lt;/span&gt;
apk add nextcloud28

&lt;span class=&quot;c&quot;&gt;# the first run of this will fail very likely due to dependencies&lt;/span&gt;
occ upgrade

&lt;span class=&quot;c&quot;&gt;# disable dependency packages and upgrade them manually; optional use --force-overwrite if necessary&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# repeat this for all of your dependencies&lt;/span&gt;
occ app:disable &amp;lt;your dependency package&amp;gt;
apk add nextcloud28-&amp;lt;your dependency package&amp;gt;

&lt;span class=&quot;c&quot;&gt;# should be successful now&lt;/span&gt;
occ upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Finalize the upgrade scripts from nextcloud&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;occ db:add-missing-columns
occ db:add-missing-indices
occ db:add-missing-primary-keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Remove old nextcloud packages e.g.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# First steps depends on your nextcloud version and installed dependencies&lt;/span&gt;
apk del nextcloud-federation nextcloud-notifications nextcloud-files_trashbin nextcloud-dashboard nextcloud-mysql nextcloud-comments nextcloud-admin_audit nextcloud-files_external nextcloud-support nextcloud-weather_status nextcloud-systemtags nextcloud-default-apps nextcloud-files_sharing nextcloud-sharebymail nextcloud-user_status nextcloud-files_versions nextcloud-encryption nextcloud-initscript nextcloud-suspicious_login
apk del nextcloud
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Disable the maintenance mode again and try access nextcloud. Depending on the changes that were made by nextcloud you are not done with the upgrade yet and you will fail seeing the login page.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;occ maintenance:mode &lt;span class=&quot;nt&quot;&gt;--off&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;When you can login check on Admin-UI which error you should fix in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/nextcloud/config.php&lt;/code&gt;, because an update of the configuration is needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;nextcloud-hub-28---29&quot;&gt;Nextcloud Hub 28 -&amp;gt; 29&lt;/h2&gt;

&lt;h3 id=&quot;specialties&quot;&gt;Specialties&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;With the update to nextcloud29 occ has its own package in alpine linux&lt;/li&gt;
  &lt;li&gt;From upgrade nextcloud 28 to 29 the php version changed and I had to update some more packages. Make sure to run occ from the target version.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apk add nextcloud29
apk add nextcloud29-occ

&lt;span class=&quot;c&quot;&gt;#ensure to use the new occ version&lt;/span&gt;
which occ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;post-upgrade&quot;&gt;Post-Upgrade&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Enable maintenance mode&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;php-83&quot;&gt;PHP 8.3&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Between nextcloud28 and nextcloud29 there were changes in the php version, so I had to install the following php packages&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apk add php83 php83-xml libxml2 libxml2-dev php83-xmlreader php83-xmlwriter php83-simplexml php83-pecl-redis php83-pdo_mysql php83-fpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Configure php83-fpm &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nano /etc/php83/php-fpm.d/www.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;www]
user &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; nginx
group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; nginx
listen &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /run/nextcloud/fastcgi.sock
listen.owner &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; nginx
listen.group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; nginx
listen.mode &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0660
pm &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dynamic
pm.max_children &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 5
pm.start_servers &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 2
pm.min_spare_servers &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1
pm.max_spare_servers &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 3
&lt;span class=&quot;nb&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;PATH] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Add to auto start&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rc-service php-fpm83 start
rc-update add php-fpm83 default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sun, 26 Jan 2025 00:00:00 +0100</pubDate>
        <link>http://localhost:4000/blog/2025-01-26-update-nextcloud-proxmox/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2025-01-26-update-nextcloud-proxmox/</guid>
      </item>
    

    
      
        
      
    
      
    
      
        
          <item>
            <title></title>
            <description>&lt;h3&gt;   &lt;/h3&gt;

&lt;div id=&quot;categories&quot;&gt;

  &lt;div class=&quot;category-box&quot;&gt;
    
    &lt;div id=&quot;#homelab&quot;&gt;&lt;/div&gt;
    &lt;h4 class=&quot;category-head&quot;&gt;&lt;a href=&quot;/blog/categories/homelab&quot;&gt;homelab&lt;/a&gt;&lt;/h4&gt;
    &lt;a name=&quot;homelab&quot;&gt;&lt;/a&gt;
     
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/2025-01-26-update-nextcloud-proxmox/&quot;&gt;Updating Nextcloud on Proxmox LXC with Alpine Linux&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    

  &lt;/div&gt;

&lt;/div&gt;

</description>
            <link>http://localhost:4000/blog/categories/</link>
          </item>
        
      
    
      
    
      
        
          <item>
            <title>Guides</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.guides %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>http://localhost:4000/blog/categories/guides/</link>
          </item>
        
      
    
      
    
      
    
      
        
          <item>
            <title>Get Started</title>
            <description>## Getting Started - How to use “devlopr-jekyll” theme

## What&apos;s Jekyll ?

If you aren’t familiar with Jekyll yet, you should know that it is a static site generator. It will transform your plain text into static websites and blogs. No more databases, slow loading websites, risk of being hacked…just your content. And not only that, with Jekyll you get free hosting with GitHub Pages! If you are a beginner we recommend you start with [Jekyll’s Docs](https://jekyllrb.com/docs/installation/). Now, if you know how to use Jekyll, let’s move on to using this theme in Jekyll:

## Watch Tutorial

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/cXBEfpn0qrg?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;


### Steps to create your blog using devlopr-jekyll and Host using Github Pages :

&gt;  **Step 1.**  Fork the repo - [click here](https://github.com/sujaykundu777/devlopr-jekyll/fork)

![Devlopr Jekyll Repo](/assets/img/posts/fork1.PNG){:class=&quot;img-fluid&quot;}

&gt; **Step 2.** Use **your-github-username.github.io** as the new repo  ( Replace your-github-username with yours). Remember if you use the name other than your-github-username.github.io , your blog will be built using gh-pages branch.

![Devlopr Jekyll Repo](/assets/img/posts/fork2.PNG){:class=&quot;img-fluid&quot;}

![Devlopr Jekyll Repo](/assets/img/posts/fork3.PNG){:class=&quot;img-fluid&quot;}

&gt; **Step 3.** Clone the new repo locally to make changes :

![Devlopr Jekyll Repo](/assets/img/posts/fork31.PNG){:class=&quot;img-fluid&quot;}

![Devlopr Jekyll Repo](/assets/img/posts/fork32.PNG){:class=&quot;img-fluid&quot;}

![Devlopr Jekyll Repo](/assets/img/posts/fork33.PNG){:class=&quot;img-fluid&quot;}

```bash
 $ git clone https://github.com/yourusername/yourusername.github.io
 $ cd yourusername.github.io
 $ code .
```

&gt; **Step 4.** Open the files using VSCode and edit _config.yml and edit with your details:

- _config.yml file - replace with your own details
- _posts - Add your blog posts here
- _includes - You can replace the contents of the files with your data. (contains widgets)
- _assets/img - Add all your images here

![Devlopr Jekyll Repo](/assets/img/posts/fork34.PNG){:class=&quot;img-fluid&quot;}

&gt; **Step 5** - Install the development requirements:

### Set up local development environment

1. [Git](https://git-scm.com/)
2. [Ruby](https://www.ruby-lang.org/) and [Bundler](https://bundler.io/)
3. [VSCode](https://code.visualstudio.com/download)

We need ruby and bundler to build our site locally. After installation check if its working:

For ruby :

```bash
$ ruby -v
ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-linux-gnu]
```
For bundler :

```bash
$ gem install bundler
$ bundler -v
Bundler version 2.2.29
```
Add jekyll :

```bash
$ bundle update
$ bundle add jekyll
```
 This command will add the Jekyll gem to our Gemfile and install it to the ./vendor/bundle/ folder.

You can check the jekyll version

```
$ bundle exec jekyll -v
jekyll 4.2.0
```

&gt; **Step 6.** Install the gem dependencies by running the following command

```bash
$ bundle update
$ bundle install
```

&gt; **Step 7.** Serve the site locally by running the following command below:

```bash
$ bundle exec jekyll serve --watch
```
or you can also serve using :

```bash
$ jekyll serve
```

Visit [http://localhost:4000](http://localhost:4000) for development server

![Devlopr Jekyll Repo](/assets/img/posts/fork41.PNG){:class=&quot;img-fluid&quot;}


### Adding Content

Start populating your blog by adding your .md files in _posts. devlopr-jekyll already has a few examples.

#### YAML Post Example:

```yml
---
layout: post
title: Sample Post
author: Sujay Kundu
date: &apos;2019-05-21 14:35:23 +0530&apos;
category:
        - jekyll
summary: This is the summary for the sample post
thumbnail: sample.png
---

Hi ! This is sample post.

```

#### YAML Page Example:

```yml
---
layout: page
title: Sample Page
permalink: /sample-page/
---

Hi ! This is sample page.
```

#### Editing stylesheet

You’ll only work with a single file to edit/add theme style: assets/css/main.scss.

### Deploy your Changes

Once happy with your blog changes. Push your changes to master branch.

&gt; **Step 8.** Push Your Local Changes

```bash
 $ git add .
 $ git commit -m &quot;my new blog using devlopr-jekyll&quot;
 $ git push origin master
```

Visit your Github Repo settings ! Enable master branch as Github Pages Branch :

![Devlopr Jekyll Repo](/assets/img/posts/fork6.PNG){:class=&quot;img-fluid&quot;}

&gt; **Step 9.** Deploy your Blog :

![Devlopr Jekyll Repo](/assets/img/posts/fork7.PNG){:class=&quot;img-fluid&quot;}

&gt; Congrats ! On your new shining Blog !

You can visit the blog using [http://your-github-username.github.io](http://your-github-username.github.io).

</description>
            <link>http://localhost:4000/get-started/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Jekyll</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.jekyll %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>http://localhost:4000/blog/categories/jekyll/</link>
          </item>
        
      
    
      
    
      
        
          <item>
            <title>Guides</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.sample_category %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>http://localhost:4000/blog/categories/sample_category/</link>
          </item>
        
      
    
      
    
      
    

  </channel>
</rss>